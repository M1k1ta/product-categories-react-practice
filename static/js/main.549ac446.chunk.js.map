{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","someCategory","user","usersFromServer","someUser","App","useState","allProducts","selectedUserId","setSelectedUserId","query","setQuery","visibleProducts","filter","toLowerCase","includes","className","href","classNames","onClick","type","placeholder","value","onChange","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"wQAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,MAAOC,IAAK,KAC3B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,MCJf,GACb,CACEF,GAAI,EACJG,MAAO,UACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,cACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,UACPC,KAAM,eACNC,QAAS,I,OCpBPC,ECTS,CACb,CACEN,GAAI,EACJC,KAAM,OACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,QACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,OACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,SACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,QACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,SACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,OACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,QACNM,WAAY,GAEd,CACEP,GAAI,EACJC,KAAM,SACNM,WAAY,IDnCoBC,KAAI,SAACC,GACvC,IAAMC,EAAWC,EAAqBC,MAAK,SAAAC,GAAY,OACrDA,EAAab,KAAOS,EAAQF,UADyB,KAEjD,KACAO,EAAOC,EAAgBH,MAAK,SAAAI,GAAQ,OACxCA,EAAShB,KAAOU,EAASL,OADe,KAEpC,KAEN,OAAO,2BACFI,GADL,IAEEC,WACAI,QAEH,IAEYG,EAAM,WACjB,MAAsBC,mBAASZ,GAAxBa,EAAP,oBACA,EAA4CD,mBAAS,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAkBL,EAAYM,QAAO,gBAAGX,EAAH,EAAGA,KAAMb,EAAT,EAASA,KAAT,OACxCa,EAAKd,KAAOoB,IAAmBA,IAC3BnB,EAAKyB,cAAcC,SAASL,EAAMI,cAFE,IAK3C,OACE,qBAAKE,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,kCAAb,UACE,mBACE,UAAQ,iBACRC,KAAK,KACLD,UAAWE,IAAW,CACpB,aAAcV,IAEhBW,QAAS,kBAAMV,EAAkB,EAAxB,EANX,iBAWCN,EAAgBP,KAAI,SAAAM,GAAI,OACvB,mBACE,UAAQ,aACRe,KAAI,YAAOf,EAAKd,IAChB4B,UAAWE,IAAW,CACpB,YAAahB,EAAKd,KAAOoB,IAE3BW,QAAS,kBAAMV,EAAkBP,EAAKd,GAA7B,EANX,SAQGc,EAAKb,MATe,OAc3B,qBAAK2B,UAAU,cAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACE,UAAQ,cACRI,KAAK,OACLJ,UAAU,QACVK,YAAY,SACZC,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAASa,EAAMC,OAAOH,MAA1B,IAGjB,sBAAMN,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,WAG3C,sBAAMA,UAAU,gBAAhB,SACGN,GACC,wBACE,UAAQ,cACRU,KAAK,SACLJ,UAAU,SACVG,QAAS,kBAAMR,EAAS,GAAf,WAOnB,sBAAKK,UAAU,gCAAf,UACE,mBACEC,KAAK,KACL,UAAQ,gBACRD,UAAU,qCAHZ,iBAQA,mBACE,UAAQ,WACRA,UAAU,2BACVC,KAAK,KAHP,wBAQA,mBACE,UAAQ,WACRD,UAAU,mBACVC,KAAK,KAHP,wBAQA,mBACE,UAAQ,WACRD,UAAU,2BACVC,KAAK,KAHP,wBAQA,mBACE,UAAQ,WACRD,UAAU,mBACVC,KAAK,KAHP,2BASF,qBAAKD,UAAU,cAAf,SACE,mBACE,UAAQ,iBACRC,KAAK,KACLD,UAAU,0CACVG,QAAS,WACPV,EAAkB,GAClBE,EAAS,GACV,EAPH,sCAeN,qBAAKK,UAAU,sBAAf,SAC+B,IAA3BJ,EAAgBc,OAEd,wBACE,UAAQ,eACRV,UAAU,0CAFZ,UAIE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,eAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,yBAMxC,6BACE,uBAAMA,UAAU,8BAAhB,oBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBACE,UAAQ,WACRA,UAAU,8BAOpB,6BACE,uBAAMA,UAAU,8BAAhB,qBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,4BAMxC,6BACE,uBAAMA,UAAU,8BAAhB,iBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,8BAQ5C,gCACGJ,EAAgBhB,KAAI,SAACC,GACpB,IAAQT,EAA6BS,EAA7BT,GAAIC,EAAyBQ,EAAzBR,KAAMS,EAAmBD,EAAnBC,SAAUI,EAASL,EAATK,KACpBX,EAAgBO,EAAhBP,MAAOC,EAASM,EAATN,KAEf,OACE,qBAAI,UAAQ,UAAZ,UACE,oBACEwB,UAAU,uBACV,UAAQ,YAFV,SAIG5B,IAGH,oBAAI,UAAQ,cAAZ,SAA2BC,IAC3B,oBAAI,UAAQ,kBAAZ,mBAAkCG,EAAlC,cAA4CD,KAE5C,oBACE,UAAQ,cACRyB,UAAWE,IAAW,CACpB,gBAA8B,MAAbhB,EAAKZ,IACtB,kBAAgC,MAAbY,EAAKZ,MAJ5B,SAOGY,EAAKb,SAIb,SAKL,mBAAG,UAAQ,oBAAX,0DASb,EE3PDsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.549ac446.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(someCategory => (\n    someCategory.id === product.categoryId\n  )) || null;\n  const user = usersFromServer.find(someUser => (\n    someUser.id === category.ownerId\n  )) || null;\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [allProducts] = useState(products);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [query, setQuery] = useState('');\n\n  const visibleProducts = allProducts.filter(({ user, name }) => (\n    (user.id === selectedUserId || !selectedUserId)\n      && name.toLowerCase().includes(query.toLowerCase())\n  ));\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={classNames({\n                  'is-active': !selectedUserId,\n                })}\n                onClick={() => setSelectedUserId(0)}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href={`#/${user.id}`}\n                  className={classNames({\n                    'is-active': user.id === selectedUserId,\n                  })}\n                  onClick={() => setSelectedUserId(user.id)}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => setQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {query && (\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  )}\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className=\"button is-success mr-6 is-outlined\"\n              >\n                All\n              </a>\n\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1 is-info\"\n                href=\"#/\"\n              >\n                Category 1\n              </a>\n\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1\"\n                href=\"#/\"\n              >\n                Category 2\n              </a>\n\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1 is-info\"\n                href=\"#/\"\n              >\n                Category 3\n              </a>\n\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1\"\n                href=\"#/\"\n              >\n                Category 4\n              </a>\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setSelectedUserId(0);\n                  setQuery('');\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {(visibleProducts.length !== 0)\n            ? (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        ID\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Product\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className=\"fas fa-sort-down\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Category\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        User\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {visibleProducts.map((product) => {\n                    const { id, name, category, user } = product;\n                    const { title, icon } = category;\n\n                    return (\n                      <tr data-cy=\"Product\">\n                        <td\n                          className=\"has-text-weight-bold\"\n                          data-cy=\"ProductId\"\n                        >\n                          {id}\n                        </td>\n\n                        <td data-cy=\"ProductName\">{name}</td>\n                        <td data-cy=\"ProductCategory\">{`${icon} - ${title}`}</td>\n\n                        <td\n                          data-cy=\"ProductUser\"\n                          className={classNames({\n                            'has-text-link': user.sex === 'm',\n                            'has-text-danger': user.sex === 'f',\n                          })}\n                        >\n                          {user.name}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )\n            : (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}